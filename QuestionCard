import React from "react";
import { Card, CardContent, CardHeader } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Calendar, BookOpen, Award, Hash } from "lucide-react";
import { motion } from "framer-motion";

const skillTypeColors = {
  reading: "bg-blue-100 text-blue-800 border-blue-200",
  writing: "bg-green-100 text-green-800 border-green-200",
  listening: "bg-purple-100 text-purple-800 border-purple-200",
  speaking: "bg-orange-100 text-orange-800 border-orange-200",
  grammar: "bg-red-100 text-red-800 border-red-200"
};

const difficultyColors = {
  basic: "bg-green-100 text-green-800 border-green-200",
  intermediate: "bg-yellow-100 text-yellow-800 border-yellow-200",
  advanced: "bg-red-100 text-red-800 border-red-200"
};

export default function QuestionCard({ question }) {
  return (
    <motion.div
      whileHover={{ y: -2 }}
      transition={{ duration: 0.2 }}
    >
      <Card className="bg-white/80 backdrop-blur-sm border border-slate-200/60 hover:shadow-lg transition-all duration-300">
        <CardHeader className="pb-3">
          <div className="flex justify-between items-start gap-2">
            <div className="flex-1 min-w-0">
              <div className="flex items-center gap-2 mb-2">
                <Badge 
                  variant="outline" 
                  className={question.paper_type === 'continuers' ? 
                    "bg-blue-50 text-blue-700 border-blue-200" : 
                    "bg-indigo-50 text-indigo-700 border-indigo-200"
                  }
                >
                  {question.paper_type === 'continuers' ? 'Continuers' : 'Extension'}
                </Badge>
                <Badge variant="outline" className="bg-slate-50 text-slate-700 border-slate-200">
                  {question.year}
                </Badge>
              </div>
              <h3 className="font-semibold text-slate-900 line-clamp-2">
                {question.theme}
              </h3>
              {question.subtopic && (
                <p className="text-sm text-slate-600 mt-1">
                  {question.subtopic}
                </p>
              )}
            </div>
          </div>
        </CardHeader>
        
        <CardContent className="pt-0">
          <div className="mb-4">
            <p className="text-sm text-slate-700 line-clamp-3">
              {question.question_text}
            </p>
          </div>
          
          <div className="flex flex-wrap gap-2 mb-4">
            <Badge 
              variant="outline" 
              className={skillTypeColors[question.skill_type] || "bg-gray-100 text-gray-800 border-gray-200"}
            >
              {question.skill_type}
            </Badge>
            {question.difficulty_level && (
              <Badge 
                variant="outline" 
                className={difficultyColors[question.difficulty_level]}
              >
                {question.difficulty_level}
              </Badge>
            )}
          </div>
          
          <div className="flex justify-between items-center text-xs text-slate-500">
            <div className="flex items-center gap-1">
              <Hash className="w-3 h-3" />
              <span>{question.section} Q{question.question_number}</span>
            </div>
            {question.marks && (
              <div className="flex items-center gap-1">
                <Award className="w-3 h-3" />
                <span>{question.marks} marks</span>
              </div>
            )}
          </div>
        </CardContent>
      </Card>
    </motion.div>
  );
}
